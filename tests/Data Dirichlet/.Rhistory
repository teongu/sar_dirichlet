# Store the linear model in the list
lm_list[[i]] <- lm_model
}
Xbeta1 <- as.matrix(X_scaled) %*% as.matrix(lm_list[[1]]$coefficients)
Xbeta2 <- as.matrix(X_scaled) %*% as.matrix(lm_list[[2]]$coefficients)
Xbeta3 <- as.matrix(X_scaled) %*% as.matrix(lm_list[[3]]$coefficients)
rho = mean(c(lm_list[[1]]$rho, lm_list[[2]]$rho, lm_list[[3]]$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(left = Minv %*% as.matrix(Xbeta1),
right = Minv %*% as.matrix(Xbeta2),
other = Minv %*% as.matrix(Xbeta3))
pred_final <- lr_inv(pred)
cos_similarity <- function(x1, x2) {
mean(sapply(seq_len(nrow(x1)), function(i) {
sum(x1[i,] * x2[i,]) / (sqrt(sum(x1[i,]^2)) * sqrt(sum(x2[i,]^2)))
}))
}
n = 207
mse_values <- numeric()
for (i in 1:ncol(Y_occitanie)) {
# Compute MSE for the current column
mse_values[i] <- MSE(pred_final[, i], Y_occitanie[, i])
}
## distance
# R2 = 0.4141665
mean(diag(cor(pred_final, Y_occitanie) ^ 2))
# RMSE = 0.1145348
sqrt(mean(mse_values))
# cross-entropy = -1.075672
sum(Y_occitanie * log(pred_final)) / n
# cos similarity = 0.9511475
cos_similarity(Y_occitanie, pred_final)
library(readr)
library(spdep)
library(spatialreg)
library(MLmetrics)
lr <- function(x) {
log(x / rowMeans(x))
}
lr_inv <- function(x) {
exp(x) / rowSums(exp(x))
}
data_arctic <- read_csv("ArcticLake.csv")
X <- as.data.frame(data_arctic$depth)
Y <- as.data.frame(data_arctic[, c('sand', 'silt', 'clay')])
W_mat <- as.matrix(read_csv("W_arctic_cont.csv"))
W <- mat2listw(W_mat, style="W")
data_arctic$depth_scaled <- (data_arctic$depth-mean(data_arctic$depth))/sd(data_arctic$depth)
lr_Y <- lr(Y)
colnames(lr_Y) <- c("sand_lr", "silt_lr", "clay_lr")
data_arctic <- cbind(data_arctic, lr_Y)
list_pred <- matrix(nrow = 0, ncol = 3)
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
}
pred_final <- lr_inv(list_pred)
cos_similarity <- function(x1, x2) {
mean(sapply(seq_len(nrow(x1)), function(i) {
sum(x1[i,] * x2[i,]) / (sqrt(sum(x1[i,]^2)) * sqrt(sum(x2[i,]^2)))
}))
}
n = 39
mse_values <- numeric()
for (i in 1:ncol(Y)) {
# Compute MSE for the current column
mse_values[i] <- MSE(pred_final[, i], Y[, i])
}
## Contiguity
# R2 = 0.4305389
mean(diag(cor(pred_final, Y) ^ 2))
# RMSE = 0.2266367
sqrt(mean(mse_values))
# cross-entropy = -1.105847
sum(Y * log(pred_final)) / n
# cos similarity = 0.842516
cos_similarity(Y, pred_final)
data_arctc$depth_scaled_square <- data_arctic$depth_scaled**2
data_arctic$depth_scaled_square <- data_arctic$depth_scaled**2
data_arctic <- cbind(data_arctic, lr_Y)
data_arctic <- read_csv("ArcticLake.csv")
X <- as.data.frame(data_arctic$depth)
Y <- as.data.frame(data_arctic[, c('sand', 'silt', 'clay')])
W_mat <- as.matrix(read_csv("W_arctic_cont.csv"))
W <- mat2listw(W_mat, style="W")
data_arctic$depth_scaled <- (data_arctic$depth-mean(data_arctic$depth))/sd(data_arctic$depth)
data_arctic$depth_scaled_square <- data_arctic$depth_scaled**2
lr_Y <- lr(Y)
colnames(lr_Y) <- c("sand_lr", "silt_lr", "clay_lr")
data_arctic <- cbind(data_arctic, lr_Y)
list_pred <- matrix(nrow = 0, ncol = 3)
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
#mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
}
pred_final <- lr_inv(list_pred)
cos_similarity <- function(x1, x2) {
mean(sapply(seq_len(nrow(x1)), function(i) {
sum(x1[i,] * x2[i,]) / (sqrt(sum(x1[i,]^2)) * sqrt(sum(x2[i,]^2)))
}))
}
n = 39
mse_values <- numeric()
for (i in 1:ncol(Y)) {
# Compute MSE for the current column
mse_values[i] <- MSE(pred_final[, i], Y[, i])
}
## Contiguity
# R2 = 0.3674085
mean(diag(cor(pred_final, Y) ^ 2))
# RMSE = 0.1876038
sqrt(mean(mse_values))
# cross-entropy = -1.076936
sum(Y * log(pred_final)) / n
# cos similarity = 0.8823345
cos_similarity(Y, pred_final)
#W_mat <- as.matrix(read_csv("W_arctic_cont.csv"))
W_mat <- as.matrix(read_csv("W_arctic_dist.csv"))
#W_mat <- as.matrix(read_csv("W_arctic_cont.csv"))
W_mat <- as.matrix(read_csv("W_arctic_dist.csv"))
W <- mat2listw(W_mat, style="W")
list_pred <- matrix(nrow = 0, ncol = 3)
list_pred <- matrix(nrow = 0, ncol = 3)
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
}
pred_final <- lr_inv(list_pred)
cos_similarity <- function(x1, x2) {
mean(sapply(seq_len(nrow(x1)), function(i) {
sum(x1[i,] * x2[i,]) / (sqrt(sum(x1[i,]^2)) * sqrt(sum(x2[i,]^2)))
}))
}
n = 39
mse_values <- numeric()
for (i in 1:ncol(Y)) {
# Compute MSE for the current column
mse_values[i] <- MSE(pred_final[, i], Y[, i])
}
## Distance
# R2 = 0.3674085
mean(diag(cor(pred_final, Y) ^ 2))
sqrt(var(diag(cor(pred_final, Y) ^ 2)))
# RMSE = 0.1876038
sqrt(mean(mse_values))
mean(sqrt(mse_values))
sqrt(var(mse_values))
sum(Y * log(pred_final)) / n
sum((Y * log(pred_final))/n)
Y * log(pred_final)
mse_values
cbind()
MSE(pred_final[, 2], Y[, 2])
pred_final[, 2]
pred_final[i,]
MSE(pred_final[i,], Y[i,])
pred_final[i,]
Y[i,]
pred_final[i,] - Y[i,]
(pred_final[i,] - Y[i,])^2
mean((pred_final[i,] - Y[i,])^2)
as.numeric((pred_final[i,] - Y[i,])^2)
mean(as.numeric((pred_final[i,] - Y[i,])^2))
mean(as.numeric((pred_final[,i] - Y[,i])^2))
MSE(pred_final[,i], Y[,i])
cor(pred[i,], Y[i,]) ^ 2
cor(pred_final, Y)
pred[i,]
cor(pred[i,], Y[i,])
cor(as.numeric(pred[i,]), as.numeric(Y[i,]))
varr(as.numeric(pred[i,]), as.numeric(Y[i,]))
var(as.numeric(pred[i,]), as.numeric(Y[i,]))
Y[i,] * log(pred[i,])
pred[i,]
lr_inv(pred[i,])
Y[i,] * log(pred_i)
pred_i <- lr_inv(pred[i,])
Y[i,] * log(pred_i)
cos_similarity(Y[i,], pred_i)
list_r2 <- cbind()
list_rmse <- cbind()
list_crossentropy <- cbind()
list_similarity <- cbind()
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, as.numeric((pred_i - Y[i,])^2))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
## Distance
# R2 = 0.3191652 (0.2795621)
mean(list_r2)
sqrt(var(list_r2))
# RMSE = 0.1925913 (0.004872678)
mean(list_rmse)
sqrt(var(list_rmse))
sqrt(var(list_rmse))
list_rmse
mean(as.numeric((pred_i - Y[i,])^2))
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, mean(as.numeric((pred_i - Y[i,])^2)))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
## Distance
# R2 = 0.5978643 (0.2779165)
mean(list_r2)
sqrt(var(list_r2))
# RMSE = 0.1925913 (0.004872678)
mean(list_rmse)
sqrt(var(list_rmse))
list_rmse
list_r2 <- cbind()
list_rmse <- cbind()
list_crossentropy <- cbind()
list_similarity <- cbind()
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, mean(as.numeric((pred_i - Y[i,])^2)))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
# RMSE = 0.1925913 (0.004872678)
mean(list_rmse)
sqrt(var(list_rmse))
# cross-entropy = -1.076936
mean(list_crossentropy)
list_crossentropy
# cross-entropy = -1.076936
mean(list_crossentropy)
sqrt(var(list_crossentropy))
list_similarity
# cos similarity = 0.8823345
mean(list_similarity)
sqrt(var(list_similarity))
list_r2 <- cbind()
list_rmse <- cbind()
list_crossentropy <- cbind()
list_similarity <- cbind()
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
#mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, mean(as.numeric((pred_i - Y[i,])^2)))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
## Distance
# R2 = 0.5978643 (0.2779165)
mean(list_r2)
sqrt(var(list_r2))
# RMSE = 0.03709143 (0.02318635)
mean(list_rmse)
sqrt(var(list_rmse))
# cross-entropy = -1.088663 (0.1308945)
mean(list_crossentropy)
sqrt(var(list_crossentropy))
# cos similarity = 0.8739645 (0.08113203)
mean(list_similarity)
sqrt(var(list_similarity))
W_mat <- as.matrix(read_csv("W_arctic_cont.csv"))
#W_mat <- as.matrix(read_csv("W_arctic_dist.csv"))
W <- mat2listw(W_mat, style="W")
list_r2 <- cbind()
list_rmse <- cbind()
list_crossentropy <- cbind()
list_similarity <- cbind()
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
#mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, mean(as.numeric((pred_i - Y[i,])^2)))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
## Contiguity
# R2 = 0.7290594 (0.2707709)
mean(list_r2)
sqrt(var(list_r2))
# RMSE = 0.03303083 (0.03403696)
mean(list_rmse)
sqrt(var(list_rmse))
# cross-entropy = -1.059102 (0.1939663)
mean(list_crossentropy)
sqrt(var(list_crossentropy))
# cos similarity = 0.8895072 (0.116246)
mean(list_similarity)
sqrt(var(list_similarity))
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, mean(as.numeric((pred_i - Y[i,])^2)))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
list_r2 <- cbind()
list_rmse <- cbind()
list_crossentropy <- cbind()
list_similarity <- cbind()
# Iterate over each row index
for (i in 1:nrow(data_arctic)) {
# Exclude the i-th row
training_data <- data_arctic[-i, ]
W_mat_training <- W_mat[-i, -i]
training_W <- mat2listw(W_mat_training, style="W")
mod1 <- lagsarlm(sand_lr ~ depth_scaled, data=training_data, listw=training_W)
mod2 <- lagsarlm(silt_lr ~ depth_scaled, data=training_data, listw=training_W)
mod3 <- lagsarlm(clay_lr ~ depth_scaled, data=training_data, listw=training_W)
#mod1 <- lagsarlm(sand_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod2 <- lagsarlm(silt_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
#mod3 <- lagsarlm(clay_lr ~ depth_scaled + depth_scaled_square, data=training_data, listw=training_W)
Xbeta1 <- mod1$coefficients[1]*data_arctic$depth_scaled
Xbeta2 <- mod2$coefficients[1]*data_arctic$depth_scaled
Xbeta3 <- mod3$coefficients[1]*data_arctic$depth_scaled
rho = mean(c(mod1$rho, mod2$rho, mod3$rho))
Minv = solve( diag(nrow(W_mat)) - rho*W_mat )
pred <- data.frame(sand = Minv %*% Xbeta1,
silt = Minv %*% Xbeta2,
clay = Minv %*% Xbeta3)
list_pred <- rbind(list_pred, pred[i,])
pred_i <- lr_inv(pred[i,])
list_r2 <- rbind(list_r2, cor(as.numeric(pred_i), as.numeric(Y[i,])) ^ 2)
list_rmse <- rbind(list_rmse, mean(as.numeric((pred_i - Y[i,])^2)))
list_crossentropy <- rbind(list_crossentropy, sum(Y[i,] * log(pred_i)))
list_similarity <- rbind(list_similarity, cos_similarity(Y[i,], pred_i))
}
## Contiguity
# R2 = 0.670666 (0.2713688)
mean(list_r2)
sqrt(var(list_r2))
# RMSE = 0.03460107 (0.02985861)
mean(list_rmse)
sqrt(var(list_rmse))
# cross-entropy = -1.081451 (0.1733934)
mean(list_crossentropy)
sqrt(var(list_crossentropy))
# cos similarity = 0.8891295 (0.09781993)
mean(list_similarity)
sqrt(var(list_similarity))
